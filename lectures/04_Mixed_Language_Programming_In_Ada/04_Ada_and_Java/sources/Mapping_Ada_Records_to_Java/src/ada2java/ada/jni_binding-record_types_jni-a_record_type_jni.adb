-------------------------------------------------------------------------------
-- This file has been automatically generated by                             --
--    ADA2JAVA (built with ASIS 2.0.R for GNAT GPL 2014 (20140331))          --
-- Original Ada unit: Record_Types                                           --
-- Generation timestamp: 201412211026                                        --
-------------------------------------------------------------------------------

pragma Warnings (Off);
pragma Style_Checks ("NM32766");

with Ada.Unchecked_Deallocation;
with System.Address_To_Access_Conversions;
with Ada.Unchecked_Conversion;
with Ada.Tags;
with Ada.Exceptions;
with Interfaces.C;
with Interfaces.C.Strings;
with JNI_Binding.Record_Types_JNI.A_Nested_Record_Type_JNI;

package body JNI_Binding.Record_Types_JNI.A_Record_Type_JNI is 

   procedure JNI_For_Body_Elaboration is begin null; end;

   procedure Initialize_Unit_JNI (Id_JNI_1 : Interfaces.Java.JNI.JNI_Env_Access) is
   begin

      null;
      AJIS.Internal.Java.Initialize (Id_JNI_114, Id_JNI_1);
   end Initialize_Unit_JNI;

   function Id_JNI_117 (Left : access constant Record_Types.A_Record_Type; Right : access constant Record_Types.A_Record_Type) return Standard.Boolean is
      Id_JNI_127 : Standard.Boolean := Record_Types."=" (Left.all, Right.all);
   begin
      return Id_JNI_127;
   end Id_JNI_117;

   function equals_Id_JNI_116 (Id_JNI_1 : Interfaces.Java.JNI.JNI_Env_Access; Id_JNI_2 : Interfaces.Java.JNI.J_Object; Left : Interfaces.Java.JNI.J_Int_J_Array; Right : Interfaces.Java.JNI.J_Int_J_Array) return Interfaces.Java.JNI.J_Boolean is
   begin
      declare
         Id_JNI_119 : JNI_Binding.Record_Types_JNI.Id_JNI_115.Object_Pointer_Cst := JNI_Binding.Record_Types_JNI.Id_JNI_115.Object_Pointer_Cst (JNI_Binding.Record_Types_JNI.Id_JNI_115.To_Pointer (Id_JNI_1, Left));
         Id_JNI_123 : JNI_Binding.Record_Types_JNI.Id_JNI_115.Object_Pointer_Cst := JNI_Binding.Record_Types_JNI.Id_JNI_115.Object_Pointer_Cst (JNI_Binding.Record_Types_JNI.Id_JNI_115.To_Pointer (Id_JNI_1, Right));
         Id_JNI_128 : Interfaces.Java.JNI.J_Boolean := Interfaces.Java.JNI.J_Boolean (Id_JNI_117 (Id_JNI_119, Id_JNI_123));
      begin
         return Id_JNI_128;
      end;
   exception
      when J : AJIS.Java.Java_Exception =>
         declare
            Result : Interfaces.Java.JNI.J_Int;
         begin
            Result := Interfaces.Java.JNI.Throw (Id_JNI_1, AJIS.Internal.Java.Throwable_Value (Ada.Exceptions.Exception_Message (J)));
            return Interfaces.Java.JNI.J_Boolean (False);
         end;
      when E : others =>
         declare
            Result : Interfaces.Java.JNI.J_Int;
            Except : Interfaces.Java.JNI.J_Object;
         begin
            Except := AJIS.Internal.Java.Create_Java_Exception (Id_JNI_1, E);
            if Interfaces.Java.JNI."=" (Except, Interfaces.Java.JNI.J_Null_Object) then
               Result := Interfaces.Java.JNI.Throw_New (Id_JNI_1, AJIS.Internal.Java.Get_Class (AJIS.Internal.Java.Native_Exception_Class), Interfaces.C.To_C (Ada.Exceptions.Exception_Information (E)));
            else
               Result := Interfaces.Java.JNI.Throw (Id_JNI_1, Except);
            end if;
            return Interfaces.Java.JNI.J_Boolean (False);
         end;
   end equals_Id_JNI_116;

   function Id_JNI_134 (This : access Record_Types.A_Record_Type) return access Record_Types.A_Record_Type is
      Id_JNI_139 : JNI_Binding.Record_Types_JNI.Id_JNI_115.Object_Pointer := new Record_Types.A_Record_Type'(This.all);
      Id_JNI_144 : JNI_Binding.Record_Types_JNI.Id_JNI_115.Object_Pointer := JNI_Binding.Record_Types_JNI.Id_JNI_115.Object_Pointer (Id_JNI_139);
   begin
      return Id_JNI_144;
   end Id_JNI_134;

   function internalClone_Id_JNI_133 (Id_JNI_1 : Interfaces.Java.JNI.JNI_Env_Access; Id_JNI_2 : Interfaces.Java.JNI.J_Object; This : Interfaces.Java.JNI.J_Int_J_Array) return Interfaces.Java.JNI.J_Int_J_Array is
   begin
      declare
         Id_JNI_136 : JNI_Binding.Record_Types_JNI.Id_JNI_115.Object_Pointer := JNI_Binding.Record_Types_JNI.Id_JNI_115.Object_Pointer (JNI_Binding.Record_Types_JNI.Id_JNI_115.To_Pointer (Id_JNI_1, This));
         Id_JNI_141_Proxy : Interfaces.Java.JNI.J_Object;
         Id_JNI_142_Ptr : JNI_Binding.Record_Types_JNI.Id_JNI_115.Object_Pointer := JNI_Binding.Record_Types_JNI.Id_JNI_115.Object_Pointer (Id_JNI_134 (Id_JNI_136));
      begin
         declare
            Id_JNI_145 : Interfaces.Java.JNI.J_Int_J_Array := JNI_Binding.Record_Types_JNI.Id_JNI_115.To_JintArray (Id_JNI_1, Id_JNI_142_Ptr);
         begin
            return Id_JNI_145;
         end;
      end;
   exception
      when J : AJIS.Java.Java_Exception =>
         declare
            Result : Interfaces.Java.JNI.J_Int;
         begin
            Result := Interfaces.Java.JNI.Throw (Id_JNI_1, AJIS.Internal.Java.Throwable_Value (Ada.Exceptions.Exception_Message (J)));
            return Interfaces.Java.JNI.J_Null_Int_J_Array;
         end;
      when E : others =>
         declare
            Result : Interfaces.Java.JNI.J_Int;
            Except : Interfaces.Java.JNI.J_Object;
         begin
            Except := AJIS.Internal.Java.Create_Java_Exception (Id_JNI_1, E);
            if Interfaces.Java.JNI."=" (Except, Interfaces.Java.JNI.J_Null_Object) then
               Result := Interfaces.Java.JNI.Throw_New (Id_JNI_1, AJIS.Internal.Java.Get_Class (AJIS.Internal.Java.Native_Exception_Class), Interfaces.C.To_C (Ada.Exceptions.Exception_Information (E)));
            else
               Result := Interfaces.Java.JNI.Throw (Id_JNI_1, Except);
            end if;
            return Interfaces.Java.JNI.J_Null_Int_J_Array;
         end;
   end internalClone_Id_JNI_133;

   function Id_JNI_151 (Id_JNI_1 : Interfaces.Java.JNI.JNI_Env_Access; Id_JNI_2 : Interfaces.Java.JNI.J_Object) return access Record_Types.A_Record_Type is
      Id_JNI_156 : JNI_Binding.Record_Types_JNI.Id_JNI_115.Object_Pointer := JNI_Binding.Record_Types_JNI.Id_JNI_115.Object_Pointer (JNI_Binding.Record_Types_JNI.Id_JNI_115.Object_Pointer'(new Record_Types.A_Record_Type));
   begin
      return Id_JNI_156;
   end Id_JNI_151;

   function A_Record_Type_Id_JNI_150 (Id_JNI_1 : Interfaces.Java.JNI.JNI_Env_Access; Id_JNI_2 : Interfaces.Java.JNI.J_Object) return Interfaces.Java.JNI.J_Int_J_Array is
   begin
      declare
         Id_JNI_153_Proxy : Interfaces.Java.JNI.J_Object;
         Id_JNI_154_Ptr : JNI_Binding.Record_Types_JNI.Id_JNI_115.Object_Pointer := JNI_Binding.Record_Types_JNI.Id_JNI_115.Object_Pointer (Id_JNI_151(Id_JNI_1, Id_JNI_2));
      begin
         declare
            Id_JNI_157 : Interfaces.Java.JNI.J_Int_J_Array := JNI_Binding.Record_Types_JNI.Id_JNI_115.To_JintArray (Id_JNI_1, Id_JNI_154_Ptr);
         begin
            return Id_JNI_157;
         end;
      end;
   exception
      when J : AJIS.Java.Java_Exception =>
         declare
            Result : Interfaces.Java.JNI.J_Int;
         begin
            Result := Interfaces.Java.JNI.Throw (Id_JNI_1, AJIS.Internal.Java.Throwable_Value (Ada.Exceptions.Exception_Message (J)));
            return Interfaces.Java.JNI.J_Null_Int_J_Array;
         end;
      when E : others =>
         declare
            Result : Interfaces.Java.JNI.J_Int;
            Except : Interfaces.Java.JNI.J_Object;
         begin
            Except := AJIS.Internal.Java.Create_Java_Exception (Id_JNI_1, E);
            if Interfaces.Java.JNI."=" (Except, Interfaces.Java.JNI.J_Null_Object) then
               Result := Interfaces.Java.JNI.Throw_New (Id_JNI_1, AJIS.Internal.Java.Get_Class (AJIS.Internal.Java.Native_Exception_Class), Interfaces.C.To_C (Ada.Exceptions.Exception_Information (E)));
            else
               Result := Interfaces.Java.JNI.Throw (Id_JNI_1, Except);
            end if;
            return Interfaces.Java.JNI.J_Null_Int_J_Array;
         end;
   end A_Record_Type_Id_JNI_150;

   procedure Id_JNI_162 (Obj : access Record_Types.A_Record_Type) is
      Id_JNI_167 : JNI_Binding.Record_Types_JNI.Id_JNI_115.Object_Pointer := JNI_Binding.Record_Types_JNI.Id_JNI_115.Object_Pointer (Obj);
   begin
      JNI_Binding.Record_Types_JNI.Id_JNI_115.Free (Id_JNI_167);
   end Id_JNI_162;

   procedure deallocateNativeObject_Id_JNI_161 (Id_JNI_1 : Interfaces.Java.JNI.JNI_Env_Access; Id_JNI_2 : Interfaces.Java.JNI.J_Object; Obj : Interfaces.Java.JNI.J_Int_J_Array) is
   begin
      declare
         Id_JNI_164 : JNI_Binding.Record_Types_JNI.Id_JNI_115.Object_Pointer := JNI_Binding.Record_Types_JNI.Id_JNI_115.Object_Pointer (JNI_Binding.Record_Types_JNI.Id_JNI_115.To_Pointer (Id_JNI_1, Obj));
      begin
         Id_JNI_162 (Id_JNI_164);
      end;
   exception
      when J : AJIS.Java.Java_Exception =>
         declare
            Result : Interfaces.Java.JNI.J_Int;
         begin
            Result := Interfaces.Java.JNI.Throw (Id_JNI_1, AJIS.Internal.Java.Throwable_Value (Ada.Exceptions.Exception_Message (J)));
         end;
      when E : others =>
         declare
            Result : Interfaces.Java.JNI.J_Int;
            Except : Interfaces.Java.JNI.J_Object;
         begin
            Except := AJIS.Internal.Java.Create_Java_Exception (Id_JNI_1, E);
            if Interfaces.Java.JNI."=" (Except, Interfaces.Java.JNI.J_Null_Object) then
               Result := Interfaces.Java.JNI.Throw_New (Id_JNI_1, AJIS.Internal.Java.Get_Class (AJIS.Internal.Java.Native_Exception_Class), Interfaces.C.To_C (Ada.Exceptions.Exception_Information (E)));
            else
               Result := Interfaces.Java.JNI.Throw (Id_JNI_1, Except);
            end if;
         end;
   end deallocateNativeObject_Id_JNI_161;

   function Id_JNI_169 (This : access Record_Types.A_Record_Type) return Standard.Integer is
      Id_JNI_176 : Standard.Integer := This.Integer_Field;
   begin
      return Id_JNI_176;
   end Id_JNI_169;

   function Integer_Field_Id_JNI_168 (Id_JNI_1 : Interfaces.Java.JNI.JNI_Env_Access; Id_JNI_2 : Interfaces.Java.JNI.J_Object; This : Interfaces.Java.JNI.J_Int_J_Array) return Interfaces.Java.JNI.J_Int is
   begin
      declare
         Id_JNI_171 : JNI_Binding.Record_Types_JNI.Id_JNI_115.Object_Pointer := JNI_Binding.Record_Types_JNI.Id_JNI_115.Object_Pointer (JNI_Binding.Record_Types_JNI.Id_JNI_115.To_Pointer (Id_JNI_1, This));
         Id_JNI_177 : Interfaces.Java.JNI.J_Int := Interfaces.Java.JNI.J_Int (Id_JNI_169 (Id_JNI_171));
      begin
         return Id_JNI_177;
      end;
   exception
      when J : AJIS.Java.Java_Exception =>
         declare
            Result : Interfaces.Java.JNI.J_Int;
         begin
            Result := Interfaces.Java.JNI.Throw (Id_JNI_1, AJIS.Internal.Java.Throwable_Value (Ada.Exceptions.Exception_Message (J)));
            return 0;
         end;
      when E : others =>
         declare
            Result : Interfaces.Java.JNI.J_Int;
            Except : Interfaces.Java.JNI.J_Object;
         begin
            Except := AJIS.Internal.Java.Create_Java_Exception (Id_JNI_1, E);
            if Interfaces.Java.JNI."=" (Except, Interfaces.Java.JNI.J_Null_Object) then
               Result := Interfaces.Java.JNI.Throw_New (Id_JNI_1, AJIS.Internal.Java.Get_Class (AJIS.Internal.Java.Native_Exception_Class), Interfaces.C.To_C (Ada.Exceptions.Exception_Information (E)));
            else
               Result := Interfaces.Java.JNI.Throw (Id_JNI_1, Except);
            end if;
            return 0;
         end;
   end Integer_Field_Id_JNI_168;

   procedure Id_JNI_183 (This : access Record_Types.A_Record_Type; Value : Standard.Integer) is
   begin
      This.Integer_Field := Value;
   end Id_JNI_183;

   procedure Integer_Field_Id_JNI_182 (Id_JNI_1 : Interfaces.Java.JNI.JNI_Env_Access; Id_JNI_2 : Interfaces.Java.JNI.J_Object; This : Interfaces.Java.JNI.J_Int_J_Array; Value : Interfaces.Java.JNI.J_Int) is
   begin
      declare
         Id_JNI_185 : JNI_Binding.Record_Types_JNI.Id_JNI_115.Object_Pointer := JNI_Binding.Record_Types_JNI.Id_JNI_115.Object_Pointer (JNI_Binding.Record_Types_JNI.Id_JNI_115.To_Pointer (Id_JNI_1, This));
      begin
         Id_JNI_183 (Id_JNI_185, Standard.Integer (Value));
      end;
   exception
      when J : AJIS.Java.Java_Exception =>
         declare
            Result : Interfaces.Java.JNI.J_Int;
         begin
            Result := Interfaces.Java.JNI.Throw (Id_JNI_1, AJIS.Internal.Java.Throwable_Value (Ada.Exceptions.Exception_Message (J)));
         end;
      when E : others =>
         declare
            Result : Interfaces.Java.JNI.J_Int;
            Except : Interfaces.Java.JNI.J_Object;
         begin
            Except := AJIS.Internal.Java.Create_Java_Exception (Id_JNI_1, E);
            if Interfaces.Java.JNI."=" (Except, Interfaces.Java.JNI.J_Null_Object) then
               Result := Interfaces.Java.JNI.Throw_New (Id_JNI_1, AJIS.Internal.Java.Get_Class (AJIS.Internal.Java.Native_Exception_Class), Interfaces.C.To_C (Ada.Exceptions.Exception_Information (E)));
            else
               Result := Interfaces.Java.JNI.Throw (Id_JNI_1, Except);
            end if;
         end;
   end Integer_Field_Id_JNI_182;

   function Id_JNI_190 (This : access Record_Types.A_Record_Type) return Standard.Float is
      Id_JNI_197 : Standard.Float := This.Float_Field;
   begin
      return Id_JNI_197;
   end Id_JNI_190;

   function Float_Field_Id_JNI_189 (Id_JNI_1 : Interfaces.Java.JNI.JNI_Env_Access; Id_JNI_2 : Interfaces.Java.JNI.J_Object; This : Interfaces.Java.JNI.J_Int_J_Array) return Interfaces.Java.JNI.J_Double is
   begin
      declare
         Id_JNI_192 : JNI_Binding.Record_Types_JNI.Id_JNI_115.Object_Pointer := JNI_Binding.Record_Types_JNI.Id_JNI_115.Object_Pointer (JNI_Binding.Record_Types_JNI.Id_JNI_115.To_Pointer (Id_JNI_1, This));
         Id_JNI_198 : Interfaces.Java.JNI.J_Double := Interfaces.Java.JNI.J_Double (Id_JNI_190 (Id_JNI_192));
      begin
         return Id_JNI_198;
      end;
   exception
      when J : AJIS.Java.Java_Exception =>
         declare
            Result : Interfaces.Java.JNI.J_Int;
         begin
            Result := Interfaces.Java.JNI.Throw (Id_JNI_1, AJIS.Internal.Java.Throwable_Value (Ada.Exceptions.Exception_Message (J)));
            return 0.0;
         end;
      when E : others =>
         declare
            Result : Interfaces.Java.JNI.J_Int;
            Except : Interfaces.Java.JNI.J_Object;
         begin
            Except := AJIS.Internal.Java.Create_Java_Exception (Id_JNI_1, E);
            if Interfaces.Java.JNI."=" (Except, Interfaces.Java.JNI.J_Null_Object) then
               Result := Interfaces.Java.JNI.Throw_New (Id_JNI_1, AJIS.Internal.Java.Get_Class (AJIS.Internal.Java.Native_Exception_Class), Interfaces.C.To_C (Ada.Exceptions.Exception_Information (E)));
            else
               Result := Interfaces.Java.JNI.Throw (Id_JNI_1, Except);
            end if;
            return 0.0;
         end;
   end Float_Field_Id_JNI_189;

   procedure Id_JNI_204 (This : access Record_Types.A_Record_Type; Value : Standard.Float) is
   begin
      This.Float_Field := Value;
   end Id_JNI_204;

   procedure Float_Field_Id_JNI_203 (Id_JNI_1 : Interfaces.Java.JNI.JNI_Env_Access; Id_JNI_2 : Interfaces.Java.JNI.J_Object; This : Interfaces.Java.JNI.J_Int_J_Array; Value : Interfaces.Java.JNI.J_Double) is
   begin
      declare
         Id_JNI_206 : JNI_Binding.Record_Types_JNI.Id_JNI_115.Object_Pointer := JNI_Binding.Record_Types_JNI.Id_JNI_115.Object_Pointer (JNI_Binding.Record_Types_JNI.Id_JNI_115.To_Pointer (Id_JNI_1, This));
      begin
         Id_JNI_204 (Id_JNI_206, Standard.Float (Value));
      end;
   exception
      when J : AJIS.Java.Java_Exception =>
         declare
            Result : Interfaces.Java.JNI.J_Int;
         begin
            Result := Interfaces.Java.JNI.Throw (Id_JNI_1, AJIS.Internal.Java.Throwable_Value (Ada.Exceptions.Exception_Message (J)));
         end;
      when E : others =>
         declare
            Result : Interfaces.Java.JNI.J_Int;
            Except : Interfaces.Java.JNI.J_Object;
         begin
            Except := AJIS.Internal.Java.Create_Java_Exception (Id_JNI_1, E);
            if Interfaces.Java.JNI."=" (Except, Interfaces.Java.JNI.J_Null_Object) then
               Result := Interfaces.Java.JNI.Throw_New (Id_JNI_1, AJIS.Internal.Java.Get_Class (AJIS.Internal.Java.Native_Exception_Class), Interfaces.C.To_C (Ada.Exceptions.Exception_Information (E)));
            else
               Result := Interfaces.Java.JNI.Throw (Id_JNI_1, Except);
            end if;
         end;
   end Float_Field_Id_JNI_203;

   function Id_JNI_211 (This : access Record_Types.A_Record_Type) return JNI_Binding.Record_Types_JNI.Id_JNI_40.Object_Pointer is
      Id_JNI_224 : JNI_Binding.Record_Types_JNI.Id_JNI_40.Object_Pointer := This.Nested_Record'Unchecked_Access;
   begin
      return Id_JNI_224;
   end Id_JNI_211;

   function Nested_Record_Id_JNI_210 (Id_JNI_1 : Interfaces.Java.JNI.JNI_Env_Access; Id_JNI_2 : Interfaces.Java.JNI.J_Object; This : Interfaces.Java.JNI.J_Int_J_Array) return Interfaces.Java.JNI.J_Int_J_Array is
   begin
      declare
         Id_JNI_213 : JNI_Binding.Record_Types_JNI.Id_JNI_115.Object_Pointer := JNI_Binding.Record_Types_JNI.Id_JNI_115.Object_Pointer (JNI_Binding.Record_Types_JNI.Id_JNI_115.To_Pointer (Id_JNI_1, This));
         Id_JNI_217_Proxy : Interfaces.Java.JNI.J_Object;
         Id_JNI_218_Ptr : JNI_Binding.Record_Types_JNI.Id_JNI_40.Object_Pointer := JNI_Binding.Record_Types_JNI.Id_JNI_40.Object_Pointer (JNI_Binding.Record_Types_JNI.Id_JNI_40.Object_Pointer'(Id_JNI_211 (Id_JNI_213)));
      begin
         declare
            Id_JNI_225 : Interfaces.Java.JNI.J_Int_J_Array := JNI_Binding.Record_Types_JNI.Id_JNI_40.To_JintArray (Id_JNI_1, Id_JNI_218_Ptr);
         begin
            return Id_JNI_225;
         end;
      end;
   exception
      when J : AJIS.Java.Java_Exception =>
         declare
            Result : Interfaces.Java.JNI.J_Int;
         begin
            Result := Interfaces.Java.JNI.Throw (Id_JNI_1, AJIS.Internal.Java.Throwable_Value (Ada.Exceptions.Exception_Message (J)));
            return Interfaces.Java.JNI.J_Null_Int_J_Array;
         end;
      when E : others =>
         declare
            Result : Interfaces.Java.JNI.J_Int;
            Except : Interfaces.Java.JNI.J_Object;
         begin
            Except := AJIS.Internal.Java.Create_Java_Exception (Id_JNI_1, E);
            if Interfaces.Java.JNI."=" (Except, Interfaces.Java.JNI.J_Null_Object) then
               Result := Interfaces.Java.JNI.Throw_New (Id_JNI_1, AJIS.Internal.Java.Get_Class (AJIS.Internal.Java.Native_Exception_Class), Interfaces.C.To_C (Ada.Exceptions.Exception_Information (E)));
            else
               Result := Interfaces.Java.JNI.Throw (Id_JNI_1, Except);
            end if;
            return Interfaces.Java.JNI.J_Null_Int_J_Array;
         end;
   end Nested_Record_Id_JNI_210;

   procedure Id_JNI_231 (This : access Record_Types.A_Record_Type; Value : Record_Types.A_Nested_Record_Type) is
   begin
      This.Nested_Record := Value;
   end Id_JNI_231;

   procedure Nested_Record_Id_JNI_230 (Id_JNI_1 : Interfaces.Java.JNI.JNI_Env_Access; Id_JNI_2 : Interfaces.Java.JNI.J_Object; This : Interfaces.Java.JNI.J_Int_J_Array; Value : Interfaces.Java.JNI.J_Int_J_Array) is
   begin
      declare
         Id_JNI_233 : JNI_Binding.Record_Types_JNI.Id_JNI_115.Object_Pointer := JNI_Binding.Record_Types_JNI.Id_JNI_115.Object_Pointer (JNI_Binding.Record_Types_JNI.Id_JNI_115.To_Pointer (Id_JNI_1, This));
         Id_JNI_237 : JNI_Binding.Record_Types_JNI.Id_JNI_40.Object_Pointer := JNI_Binding.Record_Types_JNI.Id_JNI_40.To_Pointer (Id_JNI_1, Value);
      begin
         Id_JNI_231 (Id_JNI_233, Record_Types.A_Nested_Record_Type (Id_JNI_237.all));
      end;
   exception
      when J : AJIS.Java.Java_Exception =>
         declare
            Result : Interfaces.Java.JNI.J_Int;
         begin
            Result := Interfaces.Java.JNI.Throw (Id_JNI_1, AJIS.Internal.Java.Throwable_Value (Ada.Exceptions.Exception_Message (J)));
         end;
      when E : others =>
         declare
            Result : Interfaces.Java.JNI.J_Int;
            Except : Interfaces.Java.JNI.J_Object;
         begin
            Except := AJIS.Internal.Java.Create_Java_Exception (Id_JNI_1, E);
            if Interfaces.Java.JNI."=" (Except, Interfaces.Java.JNI.J_Null_Object) then
               Result := Interfaces.Java.JNI.Throw_New (Id_JNI_1, AJIS.Internal.Java.Get_Class (AJIS.Internal.Java.Native_Exception_Class), Interfaces.C.To_C (Ada.Exceptions.Exception_Information (E)));
            else
               Result := Interfaces.Java.JNI.Throw (Id_JNI_1, Except);
            end if;
         end;
   end Nested_Record_Id_JNI_230;

begin
   null;
end JNI_Binding.Record_Types_JNI.A_Record_Type_JNI;
