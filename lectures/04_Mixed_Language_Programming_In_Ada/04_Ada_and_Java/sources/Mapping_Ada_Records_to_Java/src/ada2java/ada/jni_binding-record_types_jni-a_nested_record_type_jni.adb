-------------------------------------------------------------------------------
-- This file has been automatically generated by                             --
--    ADA2JAVA (built with ASIS 2.0.R for GNAT GPL 2014 (20140331))          --
-- Original Ada unit: Record_Types                                           --
-- Generation timestamp: 201412211026                                        --
-------------------------------------------------------------------------------

pragma Warnings (Off);
pragma Style_Checks ("NM32766");

with Ada.Unchecked_Deallocation;
with System.Address_To_Access_Conversions;
with Ada.Unchecked_Conversion;
with Ada.Tags;
with Ada.Exceptions;
with Interfaces.C;
with Interfaces.C.Strings;

package body JNI_Binding.Record_Types_JNI.A_Nested_Record_Type_JNI is 

   procedure JNI_For_Body_Elaboration is begin null; end;

   procedure Initialize_Unit_JNI (Id_JNI_1 : Interfaces.Java.JNI.JNI_Env_Access) is
   begin

      null;
      AJIS.Internal.Java.Initialize (Id_JNI_39, Id_JNI_1);
   end Initialize_Unit_JNI;

   function Id_JNI_42 (Left : access constant Record_Types.A_Nested_Record_Type; Right : access constant Record_Types.A_Nested_Record_Type) return Standard.Boolean is
      Id_JNI_52 : Standard.Boolean := Record_Types."=" (Left.all, Right.all);
   begin
      return Id_JNI_52;
   end Id_JNI_42;

   function equals_Id_JNI_41 (Id_JNI_1 : Interfaces.Java.JNI.JNI_Env_Access; Id_JNI_2 : Interfaces.Java.JNI.J_Object; Left : Interfaces.Java.JNI.J_Int_J_Array; Right : Interfaces.Java.JNI.J_Int_J_Array) return Interfaces.Java.JNI.J_Boolean is
   begin
      declare
         Id_JNI_44 : JNI_Binding.Record_Types_JNI.Id_JNI_40.Object_Pointer_Cst := JNI_Binding.Record_Types_JNI.Id_JNI_40.Object_Pointer_Cst (JNI_Binding.Record_Types_JNI.Id_JNI_40.To_Pointer (Id_JNI_1, Left));
         Id_JNI_48 : JNI_Binding.Record_Types_JNI.Id_JNI_40.Object_Pointer_Cst := JNI_Binding.Record_Types_JNI.Id_JNI_40.Object_Pointer_Cst (JNI_Binding.Record_Types_JNI.Id_JNI_40.To_Pointer (Id_JNI_1, Right));
         Id_JNI_53 : Interfaces.Java.JNI.J_Boolean := Interfaces.Java.JNI.J_Boolean (Id_JNI_42 (Id_JNI_44, Id_JNI_48));
      begin
         return Id_JNI_53;
      end;
   exception
      when J : AJIS.Java.Java_Exception =>
         declare
            Result : Interfaces.Java.JNI.J_Int;
         begin
            Result := Interfaces.Java.JNI.Throw (Id_JNI_1, AJIS.Internal.Java.Throwable_Value (Ada.Exceptions.Exception_Message (J)));
            return Interfaces.Java.JNI.J_Boolean (False);
         end;
      when E : others =>
         declare
            Result : Interfaces.Java.JNI.J_Int;
            Except : Interfaces.Java.JNI.J_Object;
         begin
            Except := AJIS.Internal.Java.Create_Java_Exception (Id_JNI_1, E);
            if Interfaces.Java.JNI."=" (Except, Interfaces.Java.JNI.J_Null_Object) then
               Result := Interfaces.Java.JNI.Throw_New (Id_JNI_1, AJIS.Internal.Java.Get_Class (AJIS.Internal.Java.Native_Exception_Class), Interfaces.C.To_C (Ada.Exceptions.Exception_Information (E)));
            else
               Result := Interfaces.Java.JNI.Throw (Id_JNI_1, Except);
            end if;
            return Interfaces.Java.JNI.J_Boolean (False);
         end;
   end equals_Id_JNI_41;

   function Id_JNI_59 (This : access Record_Types.A_Nested_Record_Type) return access Record_Types.A_Nested_Record_Type is
      Id_JNI_64 : JNI_Binding.Record_Types_JNI.Id_JNI_40.Object_Pointer := new Record_Types.A_Nested_Record_Type'(This.all);
      Id_JNI_69 : JNI_Binding.Record_Types_JNI.Id_JNI_40.Object_Pointer := JNI_Binding.Record_Types_JNI.Id_JNI_40.Object_Pointer (Id_JNI_64);
   begin
      return Id_JNI_69;
   end Id_JNI_59;

   function internalClone_Id_JNI_58 (Id_JNI_1 : Interfaces.Java.JNI.JNI_Env_Access; Id_JNI_2 : Interfaces.Java.JNI.J_Object; This : Interfaces.Java.JNI.J_Int_J_Array) return Interfaces.Java.JNI.J_Int_J_Array is
   begin
      declare
         Id_JNI_61 : JNI_Binding.Record_Types_JNI.Id_JNI_40.Object_Pointer := JNI_Binding.Record_Types_JNI.Id_JNI_40.Object_Pointer (JNI_Binding.Record_Types_JNI.Id_JNI_40.To_Pointer (Id_JNI_1, This));
         Id_JNI_66_Proxy : Interfaces.Java.JNI.J_Object;
         Id_JNI_67_Ptr : JNI_Binding.Record_Types_JNI.Id_JNI_40.Object_Pointer := JNI_Binding.Record_Types_JNI.Id_JNI_40.Object_Pointer (Id_JNI_59 (Id_JNI_61));
      begin
         declare
            Id_JNI_70 : Interfaces.Java.JNI.J_Int_J_Array := JNI_Binding.Record_Types_JNI.Id_JNI_40.To_JintArray (Id_JNI_1, Id_JNI_67_Ptr);
         begin
            return Id_JNI_70;
         end;
      end;
   exception
      when J : AJIS.Java.Java_Exception =>
         declare
            Result : Interfaces.Java.JNI.J_Int;
         begin
            Result := Interfaces.Java.JNI.Throw (Id_JNI_1, AJIS.Internal.Java.Throwable_Value (Ada.Exceptions.Exception_Message (J)));
            return Interfaces.Java.JNI.J_Null_Int_J_Array;
         end;
      when E : others =>
         declare
            Result : Interfaces.Java.JNI.J_Int;
            Except : Interfaces.Java.JNI.J_Object;
         begin
            Except := AJIS.Internal.Java.Create_Java_Exception (Id_JNI_1, E);
            if Interfaces.Java.JNI."=" (Except, Interfaces.Java.JNI.J_Null_Object) then
               Result := Interfaces.Java.JNI.Throw_New (Id_JNI_1, AJIS.Internal.Java.Get_Class (AJIS.Internal.Java.Native_Exception_Class), Interfaces.C.To_C (Ada.Exceptions.Exception_Information (E)));
            else
               Result := Interfaces.Java.JNI.Throw (Id_JNI_1, Except);
            end if;
            return Interfaces.Java.JNI.J_Null_Int_J_Array;
         end;
   end internalClone_Id_JNI_58;

   function Id_JNI_76 (Id_JNI_1 : Interfaces.Java.JNI.JNI_Env_Access; Id_JNI_2 : Interfaces.Java.JNI.J_Object) return access Record_Types.A_Nested_Record_Type is
      Id_JNI_81 : JNI_Binding.Record_Types_JNI.Id_JNI_40.Object_Pointer := JNI_Binding.Record_Types_JNI.Id_JNI_40.Object_Pointer (JNI_Binding.Record_Types_JNI.Id_JNI_40.Object_Pointer'(new Record_Types.A_Nested_Record_Type));
   begin
      return Id_JNI_81;
   end Id_JNI_76;

   function A_Nested_Record_Type_Id_JNI_75 (Id_JNI_1 : Interfaces.Java.JNI.JNI_Env_Access; Id_JNI_2 : Interfaces.Java.JNI.J_Object) return Interfaces.Java.JNI.J_Int_J_Array is
   begin
      declare
         Id_JNI_78_Proxy : Interfaces.Java.JNI.J_Object;
         Id_JNI_79_Ptr : JNI_Binding.Record_Types_JNI.Id_JNI_40.Object_Pointer := JNI_Binding.Record_Types_JNI.Id_JNI_40.Object_Pointer (Id_JNI_76(Id_JNI_1, Id_JNI_2));
      begin
         declare
            Id_JNI_82 : Interfaces.Java.JNI.J_Int_J_Array := JNI_Binding.Record_Types_JNI.Id_JNI_40.To_JintArray (Id_JNI_1, Id_JNI_79_Ptr);
         begin
            return Id_JNI_82;
         end;
      end;
   exception
      when J : AJIS.Java.Java_Exception =>
         declare
            Result : Interfaces.Java.JNI.J_Int;
         begin
            Result := Interfaces.Java.JNI.Throw (Id_JNI_1, AJIS.Internal.Java.Throwable_Value (Ada.Exceptions.Exception_Message (J)));
            return Interfaces.Java.JNI.J_Null_Int_J_Array;
         end;
      when E : others =>
         declare
            Result : Interfaces.Java.JNI.J_Int;
            Except : Interfaces.Java.JNI.J_Object;
         begin
            Except := AJIS.Internal.Java.Create_Java_Exception (Id_JNI_1, E);
            if Interfaces.Java.JNI."=" (Except, Interfaces.Java.JNI.J_Null_Object) then
               Result := Interfaces.Java.JNI.Throw_New (Id_JNI_1, AJIS.Internal.Java.Get_Class (AJIS.Internal.Java.Native_Exception_Class), Interfaces.C.To_C (Ada.Exceptions.Exception_Information (E)));
            else
               Result := Interfaces.Java.JNI.Throw (Id_JNI_1, Except);
            end if;
            return Interfaces.Java.JNI.J_Null_Int_J_Array;
         end;
   end A_Nested_Record_Type_Id_JNI_75;

   procedure Id_JNI_87 (Obj : access Record_Types.A_Nested_Record_Type) is
      Id_JNI_92 : JNI_Binding.Record_Types_JNI.Id_JNI_40.Object_Pointer := JNI_Binding.Record_Types_JNI.Id_JNI_40.Object_Pointer (Obj);
   begin
      JNI_Binding.Record_Types_JNI.Id_JNI_40.Free (Id_JNI_92);
   end Id_JNI_87;

   procedure deallocateNativeObject_Id_JNI_86 (Id_JNI_1 : Interfaces.Java.JNI.JNI_Env_Access; Id_JNI_2 : Interfaces.Java.JNI.J_Object; Obj : Interfaces.Java.JNI.J_Int_J_Array) is
   begin
      declare
         Id_JNI_89 : JNI_Binding.Record_Types_JNI.Id_JNI_40.Object_Pointer := JNI_Binding.Record_Types_JNI.Id_JNI_40.Object_Pointer (JNI_Binding.Record_Types_JNI.Id_JNI_40.To_Pointer (Id_JNI_1, Obj));
      begin
         Id_JNI_87 (Id_JNI_89);
      end;
   exception
      when J : AJIS.Java.Java_Exception =>
         declare
            Result : Interfaces.Java.JNI.J_Int;
         begin
            Result := Interfaces.Java.JNI.Throw (Id_JNI_1, AJIS.Internal.Java.Throwable_Value (Ada.Exceptions.Exception_Message (J)));
         end;
      when E : others =>
         declare
            Result : Interfaces.Java.JNI.J_Int;
            Except : Interfaces.Java.JNI.J_Object;
         begin
            Except := AJIS.Internal.Java.Create_Java_Exception (Id_JNI_1, E);
            if Interfaces.Java.JNI."=" (Except, Interfaces.Java.JNI.J_Null_Object) then
               Result := Interfaces.Java.JNI.Throw_New (Id_JNI_1, AJIS.Internal.Java.Get_Class (AJIS.Internal.Java.Native_Exception_Class), Interfaces.C.To_C (Ada.Exceptions.Exception_Information (E)));
            else
               Result := Interfaces.Java.JNI.Throw (Id_JNI_1, Except);
            end if;
         end;
   end deallocateNativeObject_Id_JNI_86;

   function Id_JNI_94 (This : access Record_Types.A_Nested_Record_Type) return Standard.Integer is
      Id_JNI_101 : Standard.Integer := This.Integer_Field;
   begin
      return Id_JNI_101;
   end Id_JNI_94;

   function Integer_Field_Id_JNI_93 (Id_JNI_1 : Interfaces.Java.JNI.JNI_Env_Access; Id_JNI_2 : Interfaces.Java.JNI.J_Object; This : Interfaces.Java.JNI.J_Int_J_Array) return Interfaces.Java.JNI.J_Int is
   begin
      declare
         Id_JNI_96 : JNI_Binding.Record_Types_JNI.Id_JNI_40.Object_Pointer := JNI_Binding.Record_Types_JNI.Id_JNI_40.Object_Pointer (JNI_Binding.Record_Types_JNI.Id_JNI_40.To_Pointer (Id_JNI_1, This));
         Id_JNI_102 : Interfaces.Java.JNI.J_Int := Interfaces.Java.JNI.J_Int (Id_JNI_94 (Id_JNI_96));
      begin
         return Id_JNI_102;
      end;
   exception
      when J : AJIS.Java.Java_Exception =>
         declare
            Result : Interfaces.Java.JNI.J_Int;
         begin
            Result := Interfaces.Java.JNI.Throw (Id_JNI_1, AJIS.Internal.Java.Throwable_Value (Ada.Exceptions.Exception_Message (J)));
            return 0;
         end;
      when E : others =>
         declare
            Result : Interfaces.Java.JNI.J_Int;
            Except : Interfaces.Java.JNI.J_Object;
         begin
            Except := AJIS.Internal.Java.Create_Java_Exception (Id_JNI_1, E);
            if Interfaces.Java.JNI."=" (Except, Interfaces.Java.JNI.J_Null_Object) then
               Result := Interfaces.Java.JNI.Throw_New (Id_JNI_1, AJIS.Internal.Java.Get_Class (AJIS.Internal.Java.Native_Exception_Class), Interfaces.C.To_C (Ada.Exceptions.Exception_Information (E)));
            else
               Result := Interfaces.Java.JNI.Throw (Id_JNI_1, Except);
            end if;
            return 0;
         end;
   end Integer_Field_Id_JNI_93;

   procedure Id_JNI_108 (This : access Record_Types.A_Nested_Record_Type; Value : Standard.Integer) is
   begin
      This.Integer_Field := Value;
   end Id_JNI_108;

   procedure Integer_Field_Id_JNI_107 (Id_JNI_1 : Interfaces.Java.JNI.JNI_Env_Access; Id_JNI_2 : Interfaces.Java.JNI.J_Object; This : Interfaces.Java.JNI.J_Int_J_Array; Value : Interfaces.Java.JNI.J_Int) is
   begin
      declare
         Id_JNI_110 : JNI_Binding.Record_Types_JNI.Id_JNI_40.Object_Pointer := JNI_Binding.Record_Types_JNI.Id_JNI_40.Object_Pointer (JNI_Binding.Record_Types_JNI.Id_JNI_40.To_Pointer (Id_JNI_1, This));
      begin
         Id_JNI_108 (Id_JNI_110, Standard.Integer (Value));
      end;
   exception
      when J : AJIS.Java.Java_Exception =>
         declare
            Result : Interfaces.Java.JNI.J_Int;
         begin
            Result := Interfaces.Java.JNI.Throw (Id_JNI_1, AJIS.Internal.Java.Throwable_Value (Ada.Exceptions.Exception_Message (J)));
         end;
      when E : others =>
         declare
            Result : Interfaces.Java.JNI.J_Int;
            Except : Interfaces.Java.JNI.J_Object;
         begin
            Except := AJIS.Internal.Java.Create_Java_Exception (Id_JNI_1, E);
            if Interfaces.Java.JNI."=" (Except, Interfaces.Java.JNI.J_Null_Object) then
               Result := Interfaces.Java.JNI.Throw_New (Id_JNI_1, AJIS.Internal.Java.Get_Class (AJIS.Internal.Java.Native_Exception_Class), Interfaces.C.To_C (Ada.Exceptions.Exception_Information (E)));
            else
               Result := Interfaces.Java.JNI.Throw (Id_JNI_1, Except);
            end if;
         end;
   end Integer_Field_Id_JNI_107;

begin
   null;
end JNI_Binding.Record_Types_JNI.A_Nested_Record_Type_JNI;
