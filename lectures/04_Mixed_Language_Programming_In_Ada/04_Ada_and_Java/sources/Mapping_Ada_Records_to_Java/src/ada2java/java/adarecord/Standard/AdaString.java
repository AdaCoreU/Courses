/*****************************************************************************
 * This file has been automatically generated by                             *
 *    ADA2JAVA (built with ASIS 2.0.R for GNAT GPL 2014 (20140331))          *
 * Original Ada unit: Standard                                               *
 * Generation timestamp: 201412211026                                        *
 *****************************************************************************/

package adarecord.Standard;

/**
 */
@SuppressWarnings("all")
public final class AdaString extends com.adacore.ajis.internal.ada.AdaProxy {

   /**
    * @param this is passed by reference (non escapable)
    * @param Right is passed by reference (non escapable)
    */
   final public boolean equals (java.lang.Object Right) {
      adarecord.Ada2Java.Library.lock.lock ();
      try {
         int [] Id_JNI_267;
         java.lang.Object Id_JNI_268 = this;
         if (this.getClass () != Right.getClass ()) return false;
         if (Id_JNI_268 == null) {
            Id_JNI_267 = adarecord.Standard.AdaString.nullArrayAccess ();
         } else {
            Id_JNI_267 = ((com.adacore.ajis.internal.ada.AdaProxy) Id_JNI_268).getAccess ();
         }
         int [] Id_JNI_276;
         java.lang.Object Id_JNI_277 = ((com.adacore.ajis.internal.ada.AdaProxy) Right);
         if (Id_JNI_277 == null) {
            Id_JNI_276 = adarecord.Standard.AdaString.nullArrayAccess ();
         } else {
            Id_JNI_276 = ((com.adacore.ajis.internal.ada.AdaProxy) Id_JNI_277).getAccess ();
         }
         boolean Id_JNI_281 = equals_Id_JNI_258 (Id_JNI_267, Id_JNI_276);
         return Id_JNI_281;
      } finally {
         adarecord.Ada2Java.Library.lock.unlock ();
      }
   } // equals

   /**
    * @param this is passed by reference (non escapable)
    * @return is passed by reference (escapable)
    */
   public int [] internalClone () {
      adarecord.Ada2Java.Library.lock.lock ();
      try {
         int [] Id_JNI_294;
         adarecord.Standard.AdaString Id_JNI_295 = this;
         if (Id_JNI_295 == null) {
            Id_JNI_294 = adarecord.Standard.AdaString.nullArrayAccess ();
         } else {
            Id_JNI_294 = ((com.adacore.ajis.internal.ada.AdaProxy) Id_JNI_295).getAccess ();
         }
         int [] Id_JNI_303 = ((int []) internalClone_Id_JNI_285 (Id_JNI_294));
         return Id_JNI_303;
      } finally {
         adarecord.Ada2Java.Library.lock.unlock ();
      }
   } // internalClone

   /**
    * @return is passed by reference (escapable)
    */
   public AdaString (int First_1, int Last_1) {
      super (new com.adacore.ajis.internal.ada.AdaAccess (null));
      adarecord.Ada2Java.Library.lock.lock ();
      try {
         this.adaAccess = AdaString_Id_JNI_307 (First_1, Last_1);
         this.myOwner = com.adacore.ajis.IProxy.Owner.PROXY;
         this.myAllocator = com.adacore.ajis.IProxy.Allocator.DYNAMIC;
      } finally {
         adarecord.Ada2Java.Library.lock.unlock ();
      }
   } // AdaString

   public AdaString (com.adacore.ajis.internal.ada.AdaAccess access) {
      this.adaAccess = access.fAcc;
   }

   /**
    * @param this is passed by reference (non escapable)
    */
   public void deallocateNativeObject () {
      adarecord.Ada2Java.Library.lock.lock ();
      try {
         int [] Id_JNI_329;
         adarecord.Standard.AdaString Id_JNI_330 = this;
         if (Id_JNI_330 == null) {
            Id_JNI_329 = adarecord.Standard.AdaString.nullArrayAccess ();
         } else {
            Id_JNI_329 = ((com.adacore.ajis.internal.ada.AdaProxy) Id_JNI_330).getAccess ();
         }
         deallocateNativeObject_Id_JNI_320 (Id_JNI_329);
      } finally {
         adarecord.Ada2Java.Library.lock.unlock ();
      }
   } // deallocateNativeObject

   /**
    * @param this is passed by reference (non escapable)
    */
   final public char Get_Element_At (int Index_1) {
      adarecord.Ada2Java.Library.lock.lock ();
      try {
         int [] Id_JNI_341;
         adarecord.Standard.AdaString Id_JNI_342 = this;
         if (Id_JNI_342 == null) {
            Id_JNI_341 = adarecord.Standard.AdaString.nullArrayAccess ();
         } else {
            Id_JNI_341 = ((com.adacore.ajis.internal.ada.AdaProxy) Id_JNI_342).getAccess ();
         }
         char Id_JNI_348 = Get_Element_At_Id_JNI_332 (Id_JNI_341, Index_1);
         return Id_JNI_348;
      } finally {
         adarecord.Ada2Java.Library.lock.unlock ();
      }
   } // Get_Element_At

   /**
    * @param this is passed by reference (non escapable)
    */
   final public void Set_Element_At (int Index_1, char Value) {
      adarecord.Ada2Java.Library.lock.lock ();
      try {
         int [] Id_JNI_361;
         adarecord.Standard.AdaString Id_JNI_362 = this;
         if (Id_JNI_362 == null) {
            Id_JNI_361 = adarecord.Standard.AdaString.nullArrayAccess ();
         } else {
            Id_JNI_361 = ((com.adacore.ajis.internal.ada.AdaProxy) Id_JNI_362).getAccess ();
         }
         Set_Element_At_Id_JNI_352 (Id_JNI_361, Index_1, Value);
      } finally {
         adarecord.Ada2Java.Library.lock.unlock ();
      }
   } // Set_Element_At

   /**
    * @param this is passed by value
    */
   final public int First () {
      adarecord.Ada2Java.Library.lock.lock ();
      try {
         int [] Id_JNI_374;
         adarecord.Standard.AdaString Id_JNI_375 = this;
         Id_JNI_374 = ((com.adacore.ajis.internal.ada.AdaProxy) Id_JNI_375).getAccess ();
         int Id_JNI_379 = First_Id_JNI_365 (Id_JNI_374);
         return Id_JNI_379;
      } finally {
         adarecord.Ada2Java.Library.lock.unlock ();
      }
   } // First

   /**
    * @param this is passed by value
    */
   final public int Last () {
      adarecord.Ada2Java.Library.lock.lock ();
      try {
         int [] Id_JNI_392;
         adarecord.Standard.AdaString Id_JNI_393 = this;
         Id_JNI_392 = ((com.adacore.ajis.internal.ada.AdaProxy) Id_JNI_393).getAccess ();
         int Id_JNI_397 = Last_Id_JNI_383 (Id_JNI_392);
         return Id_JNI_397;
      } finally {
         adarecord.Ada2Java.Library.lock.unlock ();
      }
   } // Last

   /**
    * @param this is passed by value
    */
   final public int Length () {
      adarecord.Ada2Java.Library.lock.lock ();
      try {
         int [] Id_JNI_410;
         adarecord.Standard.AdaString Id_JNI_411 = this;
         Id_JNI_410 = ((com.adacore.ajis.internal.ada.AdaProxy) Id_JNI_411).getAccess ();
         int Id_JNI_415 = Length_Id_JNI_401 (Id_JNI_410);
         return Id_JNI_415;
      } finally {
         adarecord.Ada2Java.Library.lock.unlock ();
      }
   } // Length

   /**
    * @return is passed by reference (escapable)
    */
   static public int [] createNullAccess () {
      adarecord.Ada2Java.Library.lock.lock ();
      try {
         int [] Id_JNI_427 = ((int []) createNullAccess_Id_JNI_419 ());
         return Id_JNI_427;
      } finally {
         adarecord.Ada2Java.Library.lock.unlock ();
      }
   } // createNullAccess

   private static int [] nullArrayAccessVal;

   public static int [] nullArrayAccess () {
      if (nullArrayAccessVal == null) {
         nullArrayAccessVal = createNullAccess ();
      }
      return nullArrayAccessVal;
   }

   /**
    * @param this is passed by value
    * @return is passed by value
    */
   final public java.lang.String toString () {
      adarecord.Ada2Java.Library.lock.lock ();
      try {
         int [] Id_JNI_440;
         adarecord.Standard.AdaString Id_JNI_441 = this;
         Id_JNI_440 = ((com.adacore.ajis.internal.ada.AdaProxy) Id_JNI_441).getAccess ();
         java.lang.String Id_JNI_445 = toString_Id_JNI_431 (Id_JNI_440);
         return Id_JNI_445;
      } finally {
         adarecord.Ada2Java.Library.lock.unlock ();
      }
   } // toString

   /**
    * @param Str is passed by value
    * @return is passed by reference (escapable)
    */
   public AdaString (java.lang.String Str) {
      adarecord.Ada2Java.Library.lock.lock ();
      try {
         java.lang.String Id_JNI_450 = Str;
         if (Id_JNI_450 == null) {
            throw new com.adacore.ajis.NativeException ("null not allowed for Str");
         }
         this.adaAccess = AdaString_Id_JNI_448 (Id_JNI_450);
         this.myOwner = com.adacore.ajis.IProxy.Owner.PROXY;
         this.myAllocator = com.adacore.ajis.IProxy.Allocator.DYNAMIC;
      } finally {
         adarecord.Ada2Java.Library.lock.unlock ();
      }
   } // AdaString

   native private boolean equals_Id_JNI_258 (int [] Left, int [] Right);

   native private int [] internalClone_Id_JNI_285 (int [] This);

   native private int [] AdaString_Id_JNI_307 (int First_1, int Last_1);

   native private void deallocateNativeObject_Id_JNI_320 (int [] Obj);

   native private char Get_Element_At_Id_JNI_332 (int [] This, int Index_1);

   native private void Set_Element_At_Id_JNI_352 (int [] This, int Index_1, char Value);

   native private int First_Id_JNI_365 (int [] This);

   native private int Last_Id_JNI_383 (int [] This);

   native private int Length_Id_JNI_401 (int [] This);

   native static private int [] createNullAccess_Id_JNI_419 ();

   native private java.lang.String toString_Id_JNI_431 (int [] This);

   native private int [] AdaString_Id_JNI_448 (java.lang.String Str);

   static {
      adarecord.Ada2Java.Library.load ();
   }

} // AdaString
