/*****************************************************************************
 * This file has been automatically generated by                             *
 *    ADA2JAVA (built with ASIS 2.0.R for GNAT GPL 2014 (20140331))          *
 * Original Ada unit: Standard                                               *
 * Generation timestamp: 201412180740                                        *
 *****************************************************************************/

package printer.Standard;

/**
 */
@SuppressWarnings("all")
public final class AdaString extends com.adacore.ajis.internal.ada.AdaProxy {

   /**
    * @param this is passed by reference (non escapable)
    * @param Right is passed by reference (non escapable)
    */
   final public boolean equals (java.lang.Object Right) {
      printer.Ada2Java.Library.lock.lock ();
      try {
         int [] Id_JNI_61;
         java.lang.Object Id_JNI_62 = this;
         if (this.getClass () != Right.getClass ()) return false;
         if (Id_JNI_62 == null) {
            Id_JNI_61 = printer.Standard.AdaString.nullArrayAccess ();
         } else {
            Id_JNI_61 = ((com.adacore.ajis.internal.ada.AdaProxy) Id_JNI_62).getAccess ();
         }
         int [] Id_JNI_70;
         java.lang.Object Id_JNI_71 = ((com.adacore.ajis.internal.ada.AdaProxy) Right);
         if (Id_JNI_71 == null) {
            Id_JNI_70 = printer.Standard.AdaString.nullArrayAccess ();
         } else {
            Id_JNI_70 = ((com.adacore.ajis.internal.ada.AdaProxy) Id_JNI_71).getAccess ();
         }
         boolean Id_JNI_75 = equals_Id_JNI_52 (Id_JNI_61, Id_JNI_70);
         return Id_JNI_75;
      } finally {
         printer.Ada2Java.Library.lock.unlock ();
      }
   } // equals

   /**
    * @param this is passed by reference (non escapable)
    * @return is passed by reference (escapable)
    */
   public int [] internalClone () {
      printer.Ada2Java.Library.lock.lock ();
      try {
         int [] Id_JNI_88;
         printer.Standard.AdaString Id_JNI_89 = this;
         if (Id_JNI_89 == null) {
            Id_JNI_88 = printer.Standard.AdaString.nullArrayAccess ();
         } else {
            Id_JNI_88 = ((com.adacore.ajis.internal.ada.AdaProxy) Id_JNI_89).getAccess ();
         }
         int [] Id_JNI_97 = ((int []) internalClone_Id_JNI_79 (Id_JNI_88));
         return Id_JNI_97;
      } finally {
         printer.Ada2Java.Library.lock.unlock ();
      }
   } // internalClone

   /**
    * @return is passed by reference (escapable)
    */
   public AdaString (int First_1, int Last_1) {
      super (new com.adacore.ajis.internal.ada.AdaAccess (null));
      printer.Ada2Java.Library.lock.lock ();
      try {
         this.adaAccess = AdaString_Id_JNI_101 (First_1, Last_1);
         this.myOwner = com.adacore.ajis.IProxy.Owner.PROXY;
         this.myAllocator = com.adacore.ajis.IProxy.Allocator.DYNAMIC;
      } finally {
         printer.Ada2Java.Library.lock.unlock ();
      }
   } // AdaString

   public AdaString (com.adacore.ajis.internal.ada.AdaAccess access) {
      this.adaAccess = access.fAcc;
   }

   /**
    * @param this is passed by reference (non escapable)
    */
   public void deallocateNativeObject () {
      printer.Ada2Java.Library.lock.lock ();
      try {
         int [] Id_JNI_123;
         printer.Standard.AdaString Id_JNI_124 = this;
         if (Id_JNI_124 == null) {
            Id_JNI_123 = printer.Standard.AdaString.nullArrayAccess ();
         } else {
            Id_JNI_123 = ((com.adacore.ajis.internal.ada.AdaProxy) Id_JNI_124).getAccess ();
         }
         deallocateNativeObject_Id_JNI_114 (Id_JNI_123);
      } finally {
         printer.Ada2Java.Library.lock.unlock ();
      }
   } // deallocateNativeObject

   /**
    * @param this is passed by reference (non escapable)
    */
   final public char Get_Element_At (int Index_1) {
      printer.Ada2Java.Library.lock.lock ();
      try {
         int [] Id_JNI_135;
         printer.Standard.AdaString Id_JNI_136 = this;
         if (Id_JNI_136 == null) {
            Id_JNI_135 = printer.Standard.AdaString.nullArrayAccess ();
         } else {
            Id_JNI_135 = ((com.adacore.ajis.internal.ada.AdaProxy) Id_JNI_136).getAccess ();
         }
         char Id_JNI_142 = Get_Element_At_Id_JNI_126 (Id_JNI_135, Index_1);
         return Id_JNI_142;
      } finally {
         printer.Ada2Java.Library.lock.unlock ();
      }
   } // Get_Element_At

   /**
    * @param this is passed by reference (non escapable)
    */
   final public void Set_Element_At (int Index_1, char Value) {
      printer.Ada2Java.Library.lock.lock ();
      try {
         int [] Id_JNI_155;
         printer.Standard.AdaString Id_JNI_156 = this;
         if (Id_JNI_156 == null) {
            Id_JNI_155 = printer.Standard.AdaString.nullArrayAccess ();
         } else {
            Id_JNI_155 = ((com.adacore.ajis.internal.ada.AdaProxy) Id_JNI_156).getAccess ();
         }
         Set_Element_At_Id_JNI_146 (Id_JNI_155, Index_1, Value);
      } finally {
         printer.Ada2Java.Library.lock.unlock ();
      }
   } // Set_Element_At

   /**
    * @param this is passed by value
    */
   final public int First () {
      printer.Ada2Java.Library.lock.lock ();
      try {
         int [] Id_JNI_168;
         printer.Standard.AdaString Id_JNI_169 = this;
         Id_JNI_168 = ((com.adacore.ajis.internal.ada.AdaProxy) Id_JNI_169).getAccess ();
         int Id_JNI_173 = First_Id_JNI_159 (Id_JNI_168);
         return Id_JNI_173;
      } finally {
         printer.Ada2Java.Library.lock.unlock ();
      }
   } // First

   /**
    * @param this is passed by value
    */
   final public int Last () {
      printer.Ada2Java.Library.lock.lock ();
      try {
         int [] Id_JNI_186;
         printer.Standard.AdaString Id_JNI_187 = this;
         Id_JNI_186 = ((com.adacore.ajis.internal.ada.AdaProxy) Id_JNI_187).getAccess ();
         int Id_JNI_191 = Last_Id_JNI_177 (Id_JNI_186);
         return Id_JNI_191;
      } finally {
         printer.Ada2Java.Library.lock.unlock ();
      }
   } // Last

   /**
    * @param this is passed by value
    */
   final public int Length () {
      printer.Ada2Java.Library.lock.lock ();
      try {
         int [] Id_JNI_204;
         printer.Standard.AdaString Id_JNI_205 = this;
         Id_JNI_204 = ((com.adacore.ajis.internal.ada.AdaProxy) Id_JNI_205).getAccess ();
         int Id_JNI_209 = Length_Id_JNI_195 (Id_JNI_204);
         return Id_JNI_209;
      } finally {
         printer.Ada2Java.Library.lock.unlock ();
      }
   } // Length

   /**
    * @return is passed by reference (escapable)
    */
   static public int [] createNullAccess () {
      printer.Ada2Java.Library.lock.lock ();
      try {
         int [] Id_JNI_221 = ((int []) createNullAccess_Id_JNI_213 ());
         return Id_JNI_221;
      } finally {
         printer.Ada2Java.Library.lock.unlock ();
      }
   } // createNullAccess

   private static int [] nullArrayAccessVal;

   public static int [] nullArrayAccess () {
      if (nullArrayAccessVal == null) {
         nullArrayAccessVal = createNullAccess ();
      }
      return nullArrayAccessVal;
   }

   /**
    * @param this is passed by value
    * @return is passed by value
    */
   final public java.lang.String toString () {
      printer.Ada2Java.Library.lock.lock ();
      try {
         int [] Id_JNI_234;
         printer.Standard.AdaString Id_JNI_235 = this;
         Id_JNI_234 = ((com.adacore.ajis.internal.ada.AdaProxy) Id_JNI_235).getAccess ();
         java.lang.String Id_JNI_239 = toString_Id_JNI_225 (Id_JNI_234);
         return Id_JNI_239;
      } finally {
         printer.Ada2Java.Library.lock.unlock ();
      }
   } // toString

   /**
    * @param Str is passed by value
    * @return is passed by reference (escapable)
    */
   public AdaString (java.lang.String Str) {
      printer.Ada2Java.Library.lock.lock ();
      try {
         java.lang.String Id_JNI_244 = Str;
         if (Id_JNI_244 == null) {
            throw new com.adacore.ajis.NativeException ("null not allowed for Str");
         }
         this.adaAccess = AdaString_Id_JNI_242 (Id_JNI_244);
         this.myOwner = com.adacore.ajis.IProxy.Owner.PROXY;
         this.myAllocator = com.adacore.ajis.IProxy.Allocator.DYNAMIC;
      } finally {
         printer.Ada2Java.Library.lock.unlock ();
      }
   } // AdaString

   native private boolean equals_Id_JNI_52 (int [] Left, int [] Right);

   native private int [] internalClone_Id_JNI_79 (int [] This);

   native private int [] AdaString_Id_JNI_101 (int First_1, int Last_1);

   native private void deallocateNativeObject_Id_JNI_114 (int [] Obj);

   native private char Get_Element_At_Id_JNI_126 (int [] This, int Index_1);

   native private void Set_Element_At_Id_JNI_146 (int [] This, int Index_1, char Value);

   native private int First_Id_JNI_159 (int [] This);

   native private int Last_Id_JNI_177 (int [] This);

   native private int Length_Id_JNI_195 (int [] This);

   native static private int [] createNullAccess_Id_JNI_213 ();

   native private java.lang.String toString_Id_JNI_225 (int [] This);

   native private int [] AdaString_Id_JNI_242 (java.lang.String Str);

   static {
      printer.Ada2Java.Library.load ();
   }

} // AdaString
